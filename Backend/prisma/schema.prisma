generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Province {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  districts District[]
}

model District {
  id         Int      @id @default(autoincrement())
  name       String   @unique
  province   Province @relation(fields: [provinceId], references: [id])
  provinceId Int

  @@unique([name, provinceId]) 
}

// Optimized school table with district-based partitioning
model School {
  id        Int      @id @default(autoincrement())
  name      String
  district  String   @default("Unknown") // Store district name directly for easier querying
  districtId Int     @default(1) // Reference to district ID for relationships
}

model University {
  id          Int           @id @default(autoincrement())
  name        String        @unique
  departments Department[]
}

model Department {
  id           Int        @id @default(autoincrement())
  name         String
  university   University @relation(fields: [universityId], references: [id])
  universityId Int

  @@unique([name, universityId])
}

model Registration {
  id          Int       @id @default(autoincrement())
  type        String
  province    String?
  district    String?
  school      String?
  university  String?
  department  String?
  age_range   String?
  sex         String?
  group_size  Int?      @default(1)
  group_meta  Json?
  rfidTagId   Int?      @unique // Reference to assigned RFID tag (unique for one-to-one)
  rfidTag     RfidTag?  @relation(fields: [rfidTagId], references: [id])
  createdAt   DateTime  @default(now())
}

model RfidTag {
  id          Int         @id @default(autoincrement())
  tagNumber   String      @unique // Unique RFID tag number
  status      RfidStatus  @default(AVAILABLE) // AVAILABLE, ASSIGNED, DEACTIVATED
  assignedTo  Int?        // Registration ID if assigned
  registration Registration? // Back-relation without fields/references
  assignedAt  DateTime?   // When tag was assigned
  deactivatedAt DateTime? // When tag was deactivated
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

enum RfidStatus {
  AVAILABLE
  ASSIGNED
  DEACTIVATED
}
